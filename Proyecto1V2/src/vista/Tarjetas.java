package vista;

import Datos.AlmacenamientoDeDatos;
import java.util.Iterator;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Tarjeta;
import modelo.Usuario;

/**
 *
 * @author Fernando
 */
public class Tarjetas extends javax.swing.JPanel {

    Usuario usuario;

    public Tarjetas() {
        initComponents();
    }

    AlmacenamientoDeDatos datos = new AlmacenamientoDeDatos();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblNombreTarjeta = new javax.swing.JLabel();
        txtNombreTarjeta = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        lblNumeroTarjeta = new javax.swing.JLabel();
        txtNumeroTarjeta = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        lblCodigoRegion = new javax.swing.JLabel();
        btnAñadir = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblTarjetas = new javax.swing.JTable();
        lblTitulo = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        txtFecha = new javax.swing.JTextField();

        setBackground(new java.awt.Color(241, 250, 238));
        setPreferredSize(new java.awt.Dimension(740, 480));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblNombreTarjeta.setBackground(new java.awt.Color(34, 34, 59));
        lblNombreTarjeta.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        lblNombreTarjeta.setForeground(new java.awt.Color(34, 34, 59));
        lblNombreTarjeta.setText("Nombre:");
        add(lblNombreTarjeta, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 70, -1, -1));

        txtNombreTarjeta.setBackground(new java.awt.Color(241, 250, 238));
        txtNombreTarjeta.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        txtNombreTarjeta.setForeground(new java.awt.Color(34, 34, 59));
        txtNombreTarjeta.setBorder(null);
        add(txtNombreTarjeta, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 60, 190, 30));
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 90, 70, 10));

        lblNumeroTarjeta.setBackground(new java.awt.Color(34, 34, 59));
        lblNumeroTarjeta.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        lblNumeroTarjeta.setForeground(new java.awt.Color(34, 34, 59));
        lblNumeroTarjeta.setText("Número:");
        add(lblNumeroTarjeta, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 130, -1, -1));

        txtNumeroTarjeta.setBackground(new java.awt.Color(241, 250, 238));
        txtNumeroTarjeta.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        txtNumeroTarjeta.setForeground(new java.awt.Color(34, 34, 59));
        txtNumeroTarjeta.setBorder(null);
        add(txtNumeroTarjeta, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 120, 190, 30));
        add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 150, 190, 20));

        lblCodigoRegion.setBackground(new java.awt.Color(34, 34, 59));
        lblCodigoRegion.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        lblCodigoRegion.setForeground(new java.awt.Color(34, 34, 59));
        lblCodigoRegion.setText("Fecha de vencimiento:");
        add(lblCodigoRegion, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 70, -1, -1));

        btnAñadir.setBackground(new java.awt.Color(38, 70, 83));
        btnAñadir.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        btnAñadir.setForeground(new java.awt.Color(241, 250, 238));
        btnAñadir.setText("Añadir");
        btnAñadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAñadirActionPerformed(evt);
            }
        });
        add(btnAñadir, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 120, 100, 30));

        btnEliminar.setBackground(new java.awt.Color(38, 70, 83));
        btnEliminar.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(241, 250, 238));
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 120, 100, 30));

        jScrollPane2.setBackground(new java.awt.Color(241, 250, 238));
        jScrollPane2.setForeground(new java.awt.Color(34, 34, 59));

        tblTarjetas.setBackground(new java.awt.Color(237, 237, 233));
        tblTarjetas.setForeground(new java.awt.Color(34, 34, 59));
        tblTarjetas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblTarjetas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTarjetasMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblTarjetas);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, 600, 260));

        lblTitulo.setBackground(new java.awt.Color(37, 36, 34));
        lblTitulo.setFont(new java.awt.Font("Montserrat", 1, 24)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(38, 70, 83));
        lblTitulo.setText("Tarjetas de crédito y débito");
        add(lblTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 10, -1, -1));
        add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 90, 190, 20));

        txtFecha.setBackground(new java.awt.Color(241, 250, 238));
        txtFecha.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        txtFecha.setForeground(new java.awt.Color(34, 34, 59));
        txtFecha.setBorder(null);
        add(txtFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 70, 70, 20));

        getAccessibleContext().setAccessibleName("");
    }// </editor-fold>//GEN-END:initComponents

    private void btnAñadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAñadirActionPerformed
        String nombreTarjeta = txtNombreTarjeta.getText();
        String fechaTarjeta = txtFecha.getText();
        String numeroTarjeta = txtNumeroTarjeta.getText();
        boolean tamaño;

        if (numeroTarjeta.length() <= 4) {
            tamaño = false;
        } else {
            tamaño = true;
        }

        if (nombreTarjeta.isEmpty() || numeroTarjeta.isEmpty() || fechaTarjeta.isEmpty()) {

            JOptionPane.showMessageDialog(null, "Todos los campos deben estar llenos");

        } else if (tamaño == false) {
            JOptionPane.showMessageDialog(null, "El numero de tarjeta debe contener al menos 5 digitos");
        } else {

            boolean existe = false;

            for (Tarjeta tarjeta : usuario.getTarjetas()) {

                if (tarjeta.getNumero().equals(numeroTarjeta)) {
                    existe = true;
                    break;
                }
            }

            if (existe == true) {
                JOptionPane.showMessageDialog(null, "El numero de tarjeta ingresado ya fue registrtado");
            } else {
                Tarjeta tarjetaAñadir = new Tarjeta(nombreTarjeta, numeroTarjeta, fechaTarjeta);

                usuario.setTarjetas(tarjetaAñadir);
                cargarLista();
                limpiarCampos();

                JOptionPane.showMessageDialog(null, "Tarjeta agregada correctamente");
            }

        }
    }//GEN-LAST:event_btnAñadirActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        String nombreTarjeta = txtNombreTarjeta.getText();
        String numeroTarjeta = txtNumeroTarjeta.getText();
        String fechaTarjeta = txtFecha.getText();
        String ultimosCuatroDigitos;

        if (numeroTarjeta.equals("") || numeroTarjeta.length() < 4 || numeroTarjeta.length() > 4) {
            ultimosCuatroDigitos = "";
        } else {
            ultimosCuatroDigitos = numeroTarjeta.substring(numeroTarjeta.length() - 4);
        }

        if (nombreTarjeta.isEmpty() || numeroTarjeta.isEmpty() || fechaTarjeta.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Todos los campos deben tener informacion\nIngrese los ultimos 4 digitos del numero de la tarjeta que desea eliminar y su fecha de vencimiento");
        } else if (ultimosCuatroDigitos.equals("")) {
            JOptionPane.showMessageDialog(null, "Para procesar su solicitud el numero de tarjeta debe tener cuatro digitos");
        } else {
            int respuesta = JOptionPane.showConfirmDialog(null, "Esta seguro de que desea eliminar la tarjeta decrédito cuyos ultimos 4 digitos son " + ultimosCuatroDigitos + " y fecha de vencimiento " + fechaTarjeta, "Confirmación de eliminación", JOptionPane.YES_NO_OPTION);
            if (respuesta == JOptionPane.YES_OPTION) {

                boolean existe = false;
                Iterator<Tarjeta> iter = usuario.getTarjetas().iterator();
                while (iter.hasNext()) {
                    Tarjeta tarjeta = iter.next();
                    String CDigits = tarjeta.getNumero().substring(tarjeta.getNumero().length() - 4);
                    if (CDigits.equals(ultimosCuatroDigitos) && tarjeta.getFechaVencimiento().equals(fechaTarjeta) && tarjeta.getNombre().equals(nombreTarjeta)) {
                        existe = true;
                        iter.remove();
                        break;
                    }
                }
                if (existe) {
                    JOptionPane.showMessageDialog(null, "Se eliminó la tarjeta");
                    cargarLista();
                    limpiarCampos();
                } else {
                    JOptionPane.showMessageDialog(null, "No se encontró ninguna tarjeta con los datos ingresados");
                }
            } else {
                JOptionPane.showMessageDialog(null, "No se eliminará la tarjeta");
            }
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void tblTarjetasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTarjetasMouseClicked
        int fila = tblTarjetas.getSelectedRow();
        txtNombreTarjeta.setText(tblTarjetas.getValueAt(fila, 0).toString());
        txtFecha.setText(tblTarjetas.getValueAt(fila, 2).toString());
    }//GEN-LAST:event_tblTarjetasMouseClicked

    void limpiarCampos() {
        txtFecha.setText("");
        txtNombreTarjeta.setText("");
        txtNumeroTarjeta.setText("");
    }

    void cargarLista() {

        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("Nombre de la tarjeta");
        modelo.addColumn("Numero de la tarjeta");
        modelo.addColumn("Fecha de vencimiento");

        for (Tarjeta tarjeta : usuario.getTarjetas()) {

            String numeroCompleto = tarjeta.getNumero();
            int longitudNumero = numeroCompleto.length();
            String ultimosCuatroDigitos = numeroCompleto.substring(longitudNumero - 4);
            String numerosCensurados = "X".repeat(longitudNumero - 4);
            String numeroTarjetaCensurado = numerosCensurados + ultimosCuatroDigitos;
            
            Object[] fila = {tarjeta.getNombre(), numeroTarjetaCensurado, tarjeta.getFechaVencimiento()};
            modelo.addRow(fila);

        }

        tblTarjetas.setModel(modelo);
    }

    void obtenerUsuario() {
        for (Usuario usuario : datos.usuarios) {
            if (usuario.getCodigo() == datos.codigoUsuarioActual) {
                this.usuario = usuario;
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAñadir;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel lblCodigoRegion;
    private javax.swing.JLabel lblNombreTarjeta;
    private javax.swing.JLabel lblNumeroTarjeta;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JTable tblTarjetas;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtNombreTarjeta;
    private javax.swing.JTextField txtNumeroTarjeta;
    // End of variables declaration//GEN-END:variables
}
